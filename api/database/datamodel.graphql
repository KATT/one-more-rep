# playground: https://graphqlbin.com/qxQvfk

type Post {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean! @default(value: "false")
  title: String!
  text: String!
  author: User!
  categoryName: String!
}

type User {
  id: ID! @unique
  email: String! @unique
  password: String!
  name: String!
  posts: [Post!]!
}

enum WeightUnit {
  Pound
  Kilogram
}

enum RepUnit {
  Kilometre
  Mile
  Minute
  Second
  Repetition
  UntilFailure
}

# TODO - rename as it's not specific to weight
# Maybe like - intensity / burden
enum IntensityUnit {
  KilometrePerHour
  MilePerHour
  Pound
  Kilogram
}

enum Locale {
  En_GB
  Sv_SE
}

type LocalizedStringVariation {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  # En_GB
  locale: Locale!
  string: String!
}

type LocalizedString {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  variations: [LocalizedStringVariation!]!
}

type Exercise {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  # 'squat'
  name: LocalizedString!
  slug: String! @unique
}

type ExerciseSet {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  # Squat / Sprint
  exercise: Exercise!
  # 5 / 40
  reps: Int!
  # repetitions / seconds
  repsUnit: RepUnit!

  # 100 / 20
  intensity: Float
  # kg / KilometrePerHour
  intensityUnit: IntensityUnit
}

type WorkoutSession {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  # 5x5x5 Workout A
  name: String!
  sets: [ExerciseSet!]!
}

type WorkoutProgramSettings {
  weightUnit: WeightUnit!
}

enum WorkoutRuleHook {
  AfterSuccessfulSet
}

type WorkoutRule {
  hook: WorkoutRuleHook
  num: Int! @default(value: "1")
  exercise: Exercise!
  # TODO: model how to apply changes
  # increaseIntensity: 2.5
}

type WorkoutProgram {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  # StrongLifts 5x5
  name: String!

  settings: WorkoutProgramSettings!
  workouts: [WorkoutSession!]!
  rules: [WorkoutRule!]!
}
